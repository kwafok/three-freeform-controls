"use strict";var t=require("three");function e(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(i){if("default"!==i){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}})),e.default=t,Object.freeze(e)}var i=e(t);var n;!function(t){t[t.ACTIVE=.75]="ACTIVE",t[t.INACTIVE=.3]="INACTIVE"}(n||(n={}));const s="#f0ff00";class o extends t.Mesh{constructor(e){super(),this.geometry=new t.ConeGeometry(.3,.75,32),this.material=new t.MeshBasicMaterial({color:e,depthTest:!1}),this.material.transparent=!0,this.material.opacity=1}}class a extends t.LineLoop{constructor(e,i){super(),this.geometry=i,this.material=new t.MeshBasicMaterial({color:e,depthTest:!0}),this.material.transparent=!0,this.material.opacity=1}}var r,h;exports.DEFAULT_HANDLE_GROUP_NAME=void 0,(r=exports.DEFAULT_HANDLE_GROUP_NAME||(exports.DEFAULT_HANDLE_GROUP_NAME={})).XPT="xpt_handle",r.YPT="ypt_handle",r.ZPT="zpt_handle",r.XNT="xnt_handle",r.YNT="ynt_handle",r.ZNT="znt_handle",r.XR="xr_handle",r.YR="yr_handle",r.ZR="zr_handle",r.ER="er_handle",r.PICK="pick_handle",r.PICK_PLANE_XY="pick_plane_xy_handle",r.PICK_PLANE_YZ="pick_plane_yz_handle",r.PICK_PLANE_ZX="pick_plane_zx_handle";class l extends t.Group{}class c extends l{constructor(){super(...arguments),this.up=new t.Vector3}}class d extends l{constructor(){super(...arguments),this.up=new t.Vector3}}class p extends l{}class u extends l{constructor(){super(...arguments),this.up=new t.Vector3}}class m extends c{constructor(e="#f0ff00"){super(),this.parallel=new t.Vector3(0,1,0),this.getInteractiveObjects=()=>[this.cone],this.setColor=t=>{const e=this.cone.material,i=this.line.material;e.color.set(t),i.color.set(t)},this.cone=new o(e);const i=new t.BufferGeometry;i.setAttribute("position",new t.Float32BufferAttribute([0,0,0,0,1,0],3)),this.line=new a(e,i),this.cone.geometry.scale(.3,.75,.3),this.cone.translateY(1),this.add(this.cone),this.add(this.line)}}class v extends t.Mesh{constructor(e){super(),this.geometry=new t.OctahedronGeometry(.1,0),this.material=new t.MeshBasicMaterial({color:e,depthTest:!1,transparent:!0,side:t.DoubleSide})}}class P extends d{constructor(e=s,i=1){super(),this.getInteractiveObjects=()=>[this.handlebar],this.setColor=t=>{const e=this.ring.material,i=this.handlebar.material;e.color.set(t),i.color.set(t)};const n=new t.BufferGeometry,o=2*Math.PI/64,r=[];for(let t=1;t<65;t++)r.push(i*Math.cos(t*o),i*Math.sin(t*o),0);n.setAttribute("position",new t.Float32BufferAttribute(r,3)),this.ring=new a(e,n),this.handlebar=new v(e),this.handlebar.position.y=i,this.add(this.ring),this.add(this.handlebar)}}class g extends p{constructor(){super(),this.getInteractiveObjects=()=>[this.octahedron],this.setColor=t=>{this.octahedron.material.color.set(t)},this.octahedron=new v("white"),this.add(this.octahedron)}}class E extends t.Mesh{constructor(e=s,i=.75,o=.75){super(),this.geometry=new t.PlaneGeometry(i,o,32),this.material=new t.MeshBasicMaterial({color:e,depthTest:!1,side:t.DoubleSide,transparent:!0}),this.material.opacity=n.INACTIVE}}class b extends u{constructor(e="#f0ff00",i=.75,n=.75){super(),this.getInteractiveObjects=()=>[this.plane],this.setColor=t=>{const e=this.plane.material,i=this.boundary.material;e.color.set(t),i.color.set(t)};const s=new t.BufferGeometry,o=new t.BufferGeometry,r=new t.BufferGeometry,h=i/2,l=n/2;s.setAttribute("position",new t.Float32BufferAttribute([h,l,0,h,-l,0,-h,-l,0,-h,l,0],3)),o.setAttribute("position",new t.Float32BufferAttribute([0,l,0,0,-l,0],3)),r.setAttribute("position",new t.Float32BufferAttribute([-h,0,0,h,0,0],3)),this.boundary=new a(e,s),this.crossX=new a("black",o),this.crossY=new a("black",r),this.plane=new E(e,i,n),this.add(this.plane),this.add(this.boundary),this.add(this.crossX),this.add(this.crossY)}}class f extends P{constructor(e=s,i=1){super(e,i),this.camera=null,this.controlsWorldOrientation=new t.Quaternion,this._temp1=new t.Vector3,this._temp2=new t.Vector3,this._temp3=new t.Quaternion,this.worldPosition=new t.Vector3}updateMatrixWorld(t){var e;null!==this.camera&&(null===(e=this.parent)||void 0===e||e.matrixWorld.decompose(this._temp1,this.controlsWorldOrientation,this._temp2),this.matrixWorld.decompose(this.worldPosition,this._temp3,this._temp2),this.camera.getWorldQuaternion(this.quaternion).premultiply(this.controlsWorldOrientation.invert()),this.camera.getWorldPosition(this.up).sub(this.worldPosition)),super.updateMatrixWorld(t)}}exports.ANCHOR_MODE=void 0,(h=exports.ANCHOR_MODE||(exports.ANCHOR_MODE={})).FIXED="fixed",h.INHERIT="inherit";class A extends t.Group{constructor(e,i,n){var s,o,a,r,h,l,v,E,A,w,D,T,y,S,R,_,x,N,H,O,L,V,M,j,C,I;if(super(),this.object=e,this.camera=i,this.handleTargetQuaternion=new t.Quaternion,this.objectWorldPosition=new t.Vector3,this.objectTargetPosition=new t.Vector3,this.objectTargetQuaternion=new t.Quaternion,this.objectParentWorldPosition=new t.Vector3,this.objectParentWorldQuaternion=new t.Quaternion,this.objectParentWorldScale=new t.Vector3,this.deltaPosition=new t.Vector3,this.normalizedHandleParallelVectorCache=new t.Vector3,this.touch1=new t.Vector3,this.touch2=new t.Vector3,this.boundingSphereRadius=0,this.dragStartPoint=new t.Vector3,this.dragIncrementalStartPoint=new t.Vector3,this.handles=new Set,this.isBeingDraggedTranslation=!1,this.isBeingDraggedRotation=!1,this.dampingFactor=.8,this.initialSelfQuaternion=new t.Quaternion,this.minTranslationCache=new t.Vector3,this.maxTranslationCache=new t.Vector3,this.translationLimit=!1,this.translationAnchor=null,this.setupDefaultPickPlane=()=>{this.pickPlaneXY.name=exports.DEFAULT_HANDLE_GROUP_NAME.PICK_PLANE_XY,this.pickPlaneYZ.name=exports.DEFAULT_HANDLE_GROUP_NAME.PICK_PLANE_YZ,this.pickPlaneZX.name=exports.DEFAULT_HANDLE_GROUP_NAME.PICK_PLANE_ZX,this.pickPlaneYZ.up=new t.Vector3(1,0,0),this.pickPlaneZX.up=new t.Vector3(0,1,0),this.pickPlaneXY.up=new t.Vector3(0,0,1),this.pickPlaneYZ.rotateY(Math.PI/2),this.pickPlaneZX.rotateX(Math.PI/2),this.setupHandle(this.pickPlaneXY),this.setupHandle(this.pickPlaneYZ),this.setupHandle(this.pickPlaneZX)},this.setupHandle=t=>{this.handles.add(t),this.add(t)},this.setupDefaultPick=()=>{this.pick.name=exports.DEFAULT_HANDLE_GROUP_NAME.PICK,this.setupHandle(this.pick)},this.setupDefaultEyeRotation=()=>{this.rotationEye.name=exports.DEFAULT_HANDLE_GROUP_NAME.ER,this.rotationEye.camera=this.camera,this.setupHandle(this.rotationEye)},this.setupDefaultTranslation=()=>{this.translationXP.name=exports.DEFAULT_HANDLE_GROUP_NAME.XPT,this.translationYP.name=exports.DEFAULT_HANDLE_GROUP_NAME.YPT,this.translationZP.name=exports.DEFAULT_HANDLE_GROUP_NAME.ZPT,this.translationXN.name=exports.DEFAULT_HANDLE_GROUP_NAME.XNT,this.translationYN.name=exports.DEFAULT_HANDLE_GROUP_NAME.YNT,this.translationZN.name=exports.DEFAULT_HANDLE_GROUP_NAME.ZNT,this.translationXP.translateX(this.boundingSphereRadius*this.translationDistanceScale),this.translationYP.translateY(this.boundingSphereRadius*this.translationDistanceScale),this.translationZP.translateZ(this.boundingSphereRadius*this.translationDistanceScale),this.translationXN.translateX(-this.boundingSphereRadius*this.translationDistanceScale),this.translationYN.translateY(-this.boundingSphereRadius*this.translationDistanceScale),this.translationZN.translateZ(-this.boundingSphereRadius*this.translationDistanceScale),this.translationXP.rotateZ(-Math.PI/2),this.translationZP.rotateX(Math.PI/2),this.translationXN.rotateZ(Math.PI/2),this.translationYN.rotateX(Math.PI),this.translationZN.rotateX(-Math.PI/2),this.translationXP.up=new t.Vector3(0,1,0),this.translationYP.up=new t.Vector3(0,0,1),this.translationZP.up=new t.Vector3(0,1,0),this.translationXN.up=new t.Vector3(0,-1,0),this.translationYN.up=new t.Vector3(0,0,-1),this.translationZN.up=new t.Vector3(0,-1,0),this.translationXP.parallel=new t.Vector3(1,0,0),this.translationYP.parallel=new t.Vector3(0,1,0),this.translationZP.parallel=new t.Vector3(0,0,1),this.translationXN.parallel=new t.Vector3(-1,0,0),this.translationYN.parallel=new t.Vector3(0,-1,0),this.translationZN.parallel=new t.Vector3(0,0,-1),this.setupHandle(this.translationXP),this.setupHandle(this.translationYP),this.setupHandle(this.translationZP),this.setupHandle(this.translationXN),this.setupHandle(this.translationYN),this.setupHandle(this.translationZN)},this.setupDefaultRotation=()=>{this.rotationX.name=exports.DEFAULT_HANDLE_GROUP_NAME.XR,this.rotationY.name=exports.DEFAULT_HANDLE_GROUP_NAME.YR,this.rotationZ.name=exports.DEFAULT_HANDLE_GROUP_NAME.ZR,this.rotationX.up=new t.Vector3(1,0,0),this.rotationY.up=new t.Vector3(0,1,0),this.rotationZ.up=new t.Vector3(0,0,1),this.rotationY.rotateX(Math.PI/2),this.rotationX.rotateY(Math.PI/2),this.rotationX.rotateZ(Math.PI),this.setupHandle(this.rotationX),this.setupHandle(this.rotationY),this.setupHandle(this.rotationZ)},this.computeObjectBounds=()=>{var t;if(this.useComputedBounds){if("Mesh"===this.object.type){const e=this.object.geometry;e.computeBoundingSphere();const{boundingSphere:i}=e,n=null!==(t=null==i?void 0:i.radius)&&void 0!==t?t:0;return void(this.boundingSphereRadius=n/2+this.separation)}console.warn(`Bounds can only be computed for object of type THREE.Mesh,\n          received object with type: ${this.object.type}. Falling back to using\n          default separation.\n        `)}this.boundingSphereRadius=this.separation},this.setTranslationLimit=t=>{this.translationLimit=t,this.translationAnchor=t?this.position.clone():null},this.processDragStart=t=>{const{point:e,handle:i}=t;this.dragStartPoint.copy(e),this.dragIncrementalStartPoint.copy(e),this.isBeingDraggedTranslation=i instanceof c||i instanceof p||i instanceof u,this.isBeingDraggedRotation=i instanceof d},this.processDragEnd=t=>{const{handle:e}=t,{x:i,y:n,z:s}=this.snapTranslation,o=[i,n,s];if(e instanceof c||e instanceof u||e instanceof p){const t=this.object.position.toArray(),e=t.map(Math.floor),i=t.map(Math.ceil),n=t.map(((t,n)=>i[n]-t>=t-e[n])),s=t.map(((t,s)=>o[s]?n[s]?e[s]:i[s]:t));this.object.position.fromArray(s)}this.isBeingDraggedTranslation=!1,this.isBeingDraggedRotation=!1},this.setDampingFactor=(e=0)=>this.dampingFactor=t.MathUtils.clamp(e,0,1),this.processDrag=t=>{const{point:e,handle:i,dragRatio:n=1}=t,s=Math.exp(-this.dampingFactor*Math.abs(Math.pow(n,3)));if(i instanceof c){this.deltaPosition.copy(e).sub(this.dragIncrementalStartPoint),this.normalizedHandleParallelVectorCache.copy(i.parallel.normalize()).applyQuaternion(this.quaternion);const t=this.deltaPosition.dot(this.normalizedHandleParallelVectorCache);this.deltaPosition.copy(this.normalizedHandleParallelVectorCache).multiplyScalar(this.isDampingEnabled?s*t:t),this.position.copy(this.getLimitedTranslation(this.deltaPosition))}else i instanceof p||i instanceof u?(this.deltaPosition.copy(e).sub(this.dragIncrementalStartPoint).multiplyScalar(this.isDampingEnabled?s:1),this.position.copy(this.getLimitedTranslation(this.deltaPosition))):(this.touch1.copy(this.dragIncrementalStartPoint).sub(this.objectWorldPosition).normalize(),this.touch2.copy(e).sub(this.objectWorldPosition).normalize(),this.handleTargetQuaternion.setFromUnitVectors(this.touch1,this.touch2),this.mode===exports.ANCHOR_MODE.FIXED&&this.detachHandleUpdateQuaternionAttach(i,this.handleTargetQuaternion));this.objectTargetQuaternion.premultiply(this.handleTargetQuaternion),this.dragIncrementalStartPoint.copy(e)},this.getLimitedTranslation=t=>{const e=t.add(this.position);if(!this.translationAnchor||!this.translationLimit)return e;const{x:i,y:n,z:s}=this.translationLimit,{x:o,y:a,z:r}=this.translationAnchor,{x:h,y:l,z:c}=e;return this.minTranslationCache.set(i?o+i[0]:h,n?a+n[0]:l,s?r+s[0]:c),this.maxTranslationCache.set(i?o+i[1]:h,n?a+n[1]:l,s?r+s[1]:c),e.clamp(this.minTranslationCache,this.maxTranslationCache)},this.detachObjectUpdatePositionAttach=(t,e)=>{if(null!==t&&null!==this.parent&&null!==this.parent.parent){const i=this.parent.parent;if("Scene"!==i.type)throw new Error("freeform controls must be attached to the scene");i.attach(e),e.position.copy(this.objectTargetPosition),t.attach(e)}},this.detachHandleUpdateQuaternionAttach=(t,e)=>{if(null!==this.parent&&this.parent.parent){const i=this.parent.parent;if("Scene"!==i.type)throw new Error("freeform controls must be attached to the scene");i.attach(t),t.applyQuaternion(e),this.attach(t)}},this.showByNames=(t,e=!0)=>{const i={};this.handles.forEach((t=>{i[t.name]=t})),t.map((t=>{const n=i[t];if(void 0===n)throw new Error(`handle: ${t} not found`);n.visible=e}))},this.showAll=(t=!0)=>{this.handles.forEach((e=>{e.visible=t}))},this.updateMatrixWorld=t=>{this.object.updateMatrixWorld(t),this.object.getWorldPosition(this.objectWorldPosition);const e=this.object.parent;null!==e&&e.matrixWorld.decompose(this.objectParentWorldPosition,this.objectParentWorldQuaternion,this.objectParentWorldScale),this.objectParentWorldQuaternion.invert(),this.objectTargetPosition.copy(this.position),this.objectTargetQuaternion.premultiply(this.objectParentWorldQuaternion),this.isBeingDraggedTranslation?this.detachObjectUpdatePositionAttach(e,this.object):this.isBeingDraggedRotation?(this.object.quaternion.copy(this.objectTargetQuaternion),this.detachObjectUpdatePositionAttach(e,this.object)):this.position.copy(this.objectWorldPosition),this.object.getWorldQuaternion(this.objectTargetQuaternion),this.mode!==exports.ANCHOR_MODE.INHERIT||this.isBeingDraggedTranslation||this.quaternion.copy(this.initialSelfQuaternion).premultiply(this.objectTargetQuaternion),super.updateMatrixWorld(t)},this.options=n||{},this.mode=null!==(o=null===(s=this.options)||void 0===s?void 0:s.mode)&&void 0!==o?o:exports.ANCHOR_MODE.FIXED,this.hideOtherHandlesOnDrag=null===(r=null===(a=this.options)||void 0===a?void 0:a.hideOtherHandlesOnDrag)||void 0===r||r,this.hideOtherControlsInstancesOnDrag=null===(l=null===(h=this.options)||void 0===h?void 0:h.hideOtherControlsInstancesOnDrag)||void 0===l||l,this.showHelperPlane=null!==(E=null===(v=this.options)||void 0===v?void 0:v.showHelperPlane)&&void 0!==E&&E,this.highlightAxis=null===(w=null===(A=this.options)||void 0===A?void 0:A.highlightAxis)||void 0===w||w,this.useComputedBounds=null!==(T=null===(D=this.options)||void 0===D?void 0:D.useComputedBounds)&&void 0!==T&&T,this.snapTranslation=null!==(S=null===(y=this.options)||void 0===y?void 0:y.snapTranslation)&&void 0!==S?S:{x:!1,y:!1,z:!1},this.separation=null!==(_=null===(R=this.options)||void 0===R?void 0:R.separation)&&void 0!==_?_:1,this.isDampingEnabled=null===(N=null===(x=this.options)||void 0===x?void 0:x.isDampingEnabled)||void 0===N||N,this.rotationRadiusScale=null!==(O=null===(H=this.options)||void 0===H?void 0:H.rotationRadiusScale)&&void 0!==O?O:1,this.eyeRotationRadiusScale=null!==(V=null===(L=this.options)||void 0===L?void 0:L.eyeRotationRadiusScale)&&void 0!==V?V:1.25,this.pickPlaneSizeScale=null!==(j=null===(M=this.options)||void 0===M?void 0:M.pickPlaneSizeScale)&&void 0!==j?j:.75,this.translationDistanceScale=null!==(I=null===(C=this.options)||void 0===C?void 0:C.translationDistanceScale)&&void 0!==I?I:1,void 0!==this.options.orientation){const{x:t,y:e,z:i,w:n}=this.options.orientation;this.initialSelfQuaternion.set(t,e,i,n).normalize(),this.quaternion.copy(this.initialSelfQuaternion)}this.computeObjectBounds(),this.pick=new g,this.pickPlaneXY=new b("yellow",this.boundingSphereRadius*this.pickPlaneSizeScale,this.boundingSphereRadius*this.pickPlaneSizeScale),this.pickPlaneYZ=new b("cyan",this.boundingSphereRadius*this.pickPlaneSizeScale,this.boundingSphereRadius*this.pickPlaneSizeScale),this.pickPlaneZX=new b("pink",this.boundingSphereRadius*this.pickPlaneSizeScale,this.boundingSphereRadius*this.pickPlaneSizeScale),this.translationXP=new m("red"),this.translationYP=new m("green"),this.translationZP=new m("blue"),this.translationXN=new m("red"),this.translationYN=new m("green"),this.translationZN=new m("blue"),this.rotationX=new P("red",this.boundingSphereRadius*this.rotationRadiusScale),this.rotationY=new P("green",this.boundingSphereRadius*this.rotationRadiusScale),this.rotationZ=new P("blue",this.boundingSphereRadius*this.rotationRadiusScale),this.rotationEye=new f("yellow",this.boundingSphereRadius*this.eyeRotationRadiusScale),this.setupDefaultTranslation(),this.setupDefaultRotation(),this.setupDefaultEyeRotation(),this.setupDefaultPickPlane(),this.setupDefaultPick()}getInteractiveObjects(){const t=[];return this.handles.forEach((e=>{e.visible&&t.push(...e.getInteractiveObjects())})),t}}var w;exports.EVENTS=void 0,(w=exports.EVENTS||(exports.EVENTS={})).DRAG_START="DRAG_START",w.DRAG="DRAG",w.DRAG_STOP="DRAG_STOP";const D={events:{},emit(t,...e){let i=this.events[t]||[];for(let t=0,n=i.length;t<n;t++)i[t](...e)},on(t,e){return this.events[t]?.push(e)||(this.events[t]=[e]),()=>{this.events[t]=this.events[t]?.filter((t=>e!==t))}}},T=t=>{let e=0,i=0;if(t instanceof MouseEvent)e=t.clientX,i=t.clientY;else if(t instanceof TouchEvent){if(0===t.touches.length)return null;e=t.touches[0].clientX,i=t.touches[0].clientY}return{clientX:e,clientY:i}},y=(t,e,i,n=!1)=>{e.forEach((e=>{t.addEventListener(e,i,n)}))},S=(t,e,i,n=!1)=>{e.forEach((e=>{t.removeEventListener(e,i,n)}))};class R extends i.Raycaster{constructor(t,e,s){super(),this.camera=t,this.domElement=e,this.controls=s,this.mouse=new i.Vector2,this.cameraPosition=new i.Vector3,this.activeHandle=null,this.point=new i.Vector3,this.visibleHandles=[],this.visibleControls=[],this.clientDiagonalLength=1,this.previousScreenPoint=new i.Vector2,this.currentScreenPoint=new i.Vector2,this.createAxisLine=()=>{const t=new i.BufferGeometry;return t.setAttribute("position",new i.Float32BufferAttribute([0,0,-100,0,0,100],3)),new a("white",t)},this.findActiveHandle=()=>{const t=[];return Object.values(this.controls).map((e=>{t.push(...e.getInteractiveObjects())})),this.resolveHandleGroup(super.intersectObjects(t,!0)[0])},this.hideOtherControlsInstancesOnDrag=t=>{if(null==t?void 0:t.parent){const e=t.parent;e.hideOtherControlsInstancesOnDrag&&(Object.values(this.controls).forEach((t=>{t.visible&&this.visibleControls.push(t),t.visible=!1})),e.visible=!0)}},this.hideOtherHandlesOnDrag=t=>{if(null==t?void 0:t.parent){const e=t.parent;e.hideOtherHandlesOnDrag&&(e.children.map((t=>{t.visible&&this.visibleHandles.push(t),t.visible=!1})),t.visible=!0)}},this.showAxis=t=>{if(null==t?void 0:t.parent){const e=t.parent;if(e.highlightAxis&&(this.activeHandle instanceof c||this.activeHandle instanceof d)&&!(this.activeHandle instanceof f)){t.parent.getWorldPosition(this.highlightAxisLine.position);const n=new i.Quaternion;let s;t.parent.getWorldQuaternion(n),s=this.activeHandle instanceof c?this.activeHandle.parallel.clone():this.activeHandle.up.clone(),s.applyQuaternion(n);const o=this.highlightAxisLine.position.clone().add(s);this.highlightAxisLine.lookAt(o);e.parent.add(this.highlightAxisLine)}}},this.calculateActivePlane=t=>{const e=new i.Plane;if(null==t?void 0:t.parent){const n=t.parent,s=this.getEyePlaneNormal(t),o=new i.Vector3;if(o.copy(t instanceof p?s:t.up),!(t instanceof f||t instanceof p)){const t=new i.Quaternion;n.getWorldQuaternion(t),o.applyQuaternion(t)}t instanceof c?e.setFromNormalAndCoplanarPoint(o,t.position):e.setFromNormalAndCoplanarPoint(o,n.position)}return e},this.calculateManipulationPoint=()=>{var t;const e=new i.Vector3;if(null===(t=this.activeHandle)||void 0===t?void 0:t.parent)if(this.activeHandle instanceof p)this.activeHandle.getWorldPosition(e);else if(this.activeHandle instanceof c){const t=new i.Vector3;this.activeHandle.parent.getWorldPosition(t);const n=new i.Quaternion;this.activeHandle.parent.getWorldQuaternion(n);const s=this.activeHandle.parallel.clone().applyQuaternion(n),o=new i.Ray(t,s),a=this.findClosestPoints(this.ray,o)[0];e.copy(a)}else{const t=this.calculateActivePlane(this.activeHandle);t&&this.ray.intersectPlane(t,e)}return e},this.pointerDownListener=t=>{var e;const i=T(t);if(!i)return;const{clientX:s,clientY:o}=i;if(this.setRayDirection(s,o),this.clientDiagonalLength=Math.sqrt(Math.pow(t.target.clientWidth,2)+Math.pow(t.target.clientHeight,2)),this.previousScreenPoint.set(s,o),this.activeHandle=this.findActiveHandle(),null===(e=this.activeHandle)||void 0===e?void 0:e.parent){this.hideOtherControlsInstancesOnDrag(this.activeHandle),this.hideOtherHandlesOnDrag(this.activeHandle),this.activeHandle instanceof b&&this.setPickPlaneOpacity(n.ACTIVE),this.showAxis(this.activeHandle),S(this.domElement,["pointerdown","touchstart"],this.pointerDownListener,{capture:!0});const t=this.calculateManipulationPoint();D.emit(exports.EVENTS.DRAG_START,{point:t,handle:this.activeHandle}),y(this.domElement,["pointermove","touchmove"],this.pointerMoveListener,{passive:!1,capture:!0})}},this.getEyePlaneNormal=t=>(this.cameraPosition.copy(this.camera.position),this.cameraPosition.sub(t.position)),this.setRayDirection=(t,e)=>{const i=this.domElement.getBoundingClientRect(),{clientHeight:n,clientWidth:s}=this.domElement;this.mouse.x=(t-i.left)/s*2-1,this.mouse.y=-(e-i.top)/n*2+1,this.setFromCamera(this.mouse,this.camera)},this.pointerMoveListener=t=>{if(null===this.activeHandle)return;const e=T(t);if(!e)return;const{clientX:i,clientY:n}=e;this.setRayDirection(i,n),this.point=this.calculateManipulationPoint(),this.currentScreenPoint.set(i,n);const s=this.currentScreenPoint.distanceTo(this.previousScreenPoint)/(this.clientDiagonalLength||1);D.emit(exports.EVENTS.DRAG,{point:this.point,handle:this.activeHandle,dragRatio:s}),this.previousScreenPoint.set(i,n)},this.pointerUpListener=()=>{var t,e,i,s;S(this.domElement,["pointermove","touchmove"],this.pointerMoveListener,{capture:!0}),y(this.domElement,["pointerdown","touchstart"],this.pointerDownListener,{passive:!1,capture:!0}),D.emit(exports.EVENTS.DRAG_STOP,{point:this.point,handle:this.activeHandle}),(null===(t=this.activeHandle)||void 0===t?void 0:t.parent)&&this.activeHandle.parent.hideOtherControlsInstancesOnDrag&&(this.visibleControls.forEach((t=>{t.visible=!0})),this.visibleControls=[]),(null===(e=this.activeHandle)||void 0===e?void 0:e.parent)&&this.activeHandle.parent.hideOtherHandlesOnDrag&&(this.visibleHandles.forEach((t=>{t.visible=!0})),this.visibleHandles=[]),this.activeHandle instanceof b&&this.setPickPlaneOpacity(n.INACTIVE);const o=null===(s=null===(i=this.activeHandle)||void 0===i?void 0:i.parent)||void 0===s?void 0:s.parent;o&&o.remove(this.highlightAxisLine),this.activeHandle=null},this.resolveHandleGroup=t=>void 0===t?null:t.object.parent,this.destroy=()=>{this.activeHandle=null,S(this.domElement,["pointerdown","touchstart"],this.pointerDownListener,{capture:!0}),S(this.domElement,["pointermove","touchmove"],this.pointerMoveListener,{capture:!0}),S(this.domElement,["pointerup","touchend"],this.pointerUpListener,{capture:!0})},this.highlightAxisLine=this.createAxisLine(),y(this.domElement,["pointerdown","touchstart"],this.pointerDownListener,{passive:!1,capture:!0}),y(this.domElement,["pointerup","touchend"],this.pointerUpListener,{passive:!1,capture:!0})}findClosestPoints(t,e){const i=t.direction.clone().cross(e.direction),n=t.direction.clone().cross(i).normalize(),s=e.direction.clone().cross(i).normalize(),o=t.direction.clone().normalize(),a=e.direction.clone().normalize(),r=e.origin.clone().sub(t.origin).dot(s)/o.dot(s),h=t.origin.clone().sub(e.origin).dot(n)/a.dot(n);return[t.origin.clone().add(o.multiplyScalar(r)),e.origin.clone().add(a.multiplyScalar(h))]}setPickPlaneOpacity(t){if(!(this.activeHandle instanceof b))return;const e=this.activeHandle.plane.material;Array.isArray(e)?e.map((e=>{e.opacity=t,e.needsUpdate=!0})):(e.opacity=t,e.needsUpdate=!0)}}class _ extends t.Object3D{constructor(e,i){super(),this.camera=e,this.domElement=i,this.objects={},this.controls={},this.eventListeners={[exports.EVENTS.DRAG_START]:[],[exports.EVENTS.DRAG]:[],[exports.EVENTS.DRAG_STOP]:[]},this.listenToEvents=()=>{D.on(exports.EVENTS.DRAG_START,(({point:t,handle:e})=>{if(null===e)return;const i=e.parent;null!==i&&(i.processDragStart({point:t,handle:e}),this.eventListeners[exports.EVENTS.DRAG_START].map((t=>{t(i.object,e.name)})))})),D.on(exports.EVENTS.DRAG,(({point:t,handle:e,dragRatio:i})=>{if(null===e)return;const n=e.parent;null!==n&&(n.processDrag({point:t,handle:e,dragRatio:i}),this.eventListeners[exports.EVENTS.DRAG].map((t=>{t(n.object,e.name)})))})),D.on(exports.EVENTS.DRAG_STOP,(({handle:t})=>{if(null===t)return;const e=t.parent;null!==e&&(e.processDragEnd({handle:t}),this.eventListeners[exports.EVENTS.DRAG_STOP].map((i=>{i(e.object,t.name)})))}))},this.anchor=(t,e)=>{const i=this.addControls(t,e);return this.objects[t.id]=t,i},this.detach=(t,e)=>{if(!Object.prototype.hasOwnProperty.call(this.objects,t.id))throw new Error("object should be attached first");this.remove(e),this.dispose(e),delete this.objects[t.id],delete this.controls[e.id]},this.addControls=(t,e)=>{const i=new A(t,this.camera,e);return this.controls[i.id]=i,this.add(i),i},this.listen=(t,e)=>{this.eventListeners[t].push(e)},this.removeListen=(t,e)=>{const i=this.eventListeners[t].findIndex((t=>t===e));-1!==i&&this.eventListeners[t].splice(i,1)},this.dispose=e=>{for(e instanceof t.Mesh&&(e.geometry.dispose(),Array.isArray(e.material)?e.material.map((t=>t.dispose())):e.material.dispose());e.children.length>0;)e.children.map((t=>{this.dispose(t),e.remove(t)}))},this.destroy=()=>{(()=>{for(const t of Object.keys(exports.EVENTS))D.on(t,(()=>{}));D.events={}})();const t=this.parent;null!==t&&t.remove(this),this.dispose(this),Object.values(this.controls).map((t=>{this.dispose(t)})),this.rayCaster.destroy(),this.objects={},this.controls={},this.eventListeners={[exports.EVENTS.DRAG_START]:[],[exports.EVENTS.DRAG]:[],[exports.EVENTS.DRAG_STOP]:[]}},this.rayCaster=new R(this.camera,this.domElement,this.controls),this.listenToEvents()}}exports.ControlsManager=_,exports.Pick=g,exports.PickPlane=b,exports.PickPlaneGroup=u,exports.Rotation=P,exports.RotationGroup=d,exports.Translation=m,exports.TranslationGroup=c;
//# sourceMappingURL=three-freeform-controls.js.map
